<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ShipReportCommand.php" path="\Command">
    <totals>
      <lines total="52" comments="1" code="51" executable="16" executed="16" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Command\ShipReportCommand" start="13" executable="16" executed="16" crap="6">
      <namespace name="App\Command"/>
      <method name="__construct" signature="__construct()" start="18" end="20" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="configure" signature="configure(): void" start="22" end="27" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="execute" signature="execute(Symfony\Component\Console\Input\InputInterface $input, Symfony\Component\Console\Output\OutputInterface $output): int" start="29" end="50" crap="4" executable="11" executed="11" coverage="100"/>
    </class>
    <coverage>
      <line nr="19">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="24">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="25">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="30">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="31">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="33">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="34">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
      </line>
      <line nr="37">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="41">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="42">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="43">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="45">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="47">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="49">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="23">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
      <line nr="26">
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithoutArgument"/>
        <covered by="App\Command\ShipReportCommandTest::testExecuteWithOption"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Command</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Attribute\AsCommand</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Command\Command</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Input\InputArgument</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Input\InputInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Input\InputOption</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Output\OutputInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Symfony\Component\Console\Style\SymfonyStyle</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_ATTRIBUTE">#[</token>
        <token name="T_STRING">AsCommand</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">name</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'app:ship-report'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_STRING">description</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Add a short description for your command'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="16">
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="17">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ShipReportCommand</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Command</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">configure</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addArgument</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'arg1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InputArgument</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">OPTIONAL</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Argument description'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addOption</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'option1'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InputOption</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VALUE_NONE</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Option description'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InputInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OutputInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$io</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SymfonyStyle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$output</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getArgument</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'arg1'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$io</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">note</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'You passed an argument: %s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$arg1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$input</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOption</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'option1'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// ...</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$io</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">progressStart</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">100</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">usleep</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">10000</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$io</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">progressFinish</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$io</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">success</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'You have a new command! Now make it your own! Pass --help to see your options.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Command</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SUCCESS</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
    </source>
  </file>
</phpunit>
